<<<<<<< HEAD
A ::= & | ; | RETURNSTAT ; | { STATELIST } | break ; | FUNCCALL ; | VARDECL ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | def ident ( ) { STATELIST } | def ident ( AUX25 ) { STATELIST } | def ident ( ) { STATELIST } FUNCLIST | def ident ( AUX25 ) { STATELIST } FUNCLIST
ARRAYCONTENTS ::= = EXPRESSION | = EXPRESSION , ARRAYCONTENTS
AUX1 ::= ; | { STATELIST } | break ; | VARDECL ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | ident ( ) ; | ident ( AUX13 ) ; | return ; | return AUX14 ;
AUX10 ::= int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident
AUX13 ::= ident | ident , | ident , AUX13
AUX14 ::= int_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | float_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | int_constant AUX22 | string_constant AUX22 | null AUX22 | float_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | int_constant AUX23 | string_constant AUX23 | null AUX23 | float_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | int_constant AUX23 AUX22 , | string_constant AUX23 AUX22 , | null AUX23 AUX22 , | float_constant AUX23 AUX22 , | ( NUMEXPRESSION ) AUX23 AUX22 , | [ ARRAYCONTENTS ] AUX23 AUX22 , | ident AUX17 AUX23 AUX22 , | ident AUX23 AUX22 , | int_constant AUX22 , | string_constant AUX22 , | null AUX22 , | float_constant AUX22 , | ( NUMEXPRESSION ) AUX22 , | [ ARRAYCONTENTS ] AUX22 , | ident AUX17 AUX22 , | ident AUX22 , | int_constant AUX23 , | string_constant AUX23 , | null AUX23 , | float_constant AUX23 , | ( NUMEXPRESSION ) AUX23 , | [ ARRAYCONTENTS ] AUX23 , | ident AUX17 AUX23 , | ident AUX23 , | int_constant , | string_constant , | null , | float_constant , | ( NUMEXPRESSION ) , | [ ARRAYCONTENTS ] , | ident AUX17 , | ident , | int_constant AUX23 AUX22 , AUX14 | string_constant AUX23 AUX22 , AUX14 | null AUX23 AUX22 , AUX14 | float_constant AUX23 AUX22 , AUX14 | ( NUMEXPRESSION ) AUX23 AUX22 , AUX14 | [ ARRAYCONTENTS ] AUX23 AUX22 , AUX14 | ident AUX17 AUX23 AUX22 , AUX14 | ident AUX23 AUX22 , AUX14 | int_constant AUX22 , AUX14 | string_constant AUX22 , AUX14 | null AUX22 , AUX14 | float_constant AUX22 , AUX14 | ( NUMEXPRESSION ) AUX22 , AUX14 | [ ARRAYCONTENTS ] AUX22 , AUX14 | ident AUX17 AUX22 , AUX14 | ident AUX22 , AUX14 | int_constant AUX23 , AUX14 | string_constant AUX23 , AUX14 | null AUX23 , AUX14 | float_constant AUX23 , AUX14 | ( NUMEXPRESSION ) AUX23 , AUX14 | [ ARRAYCONTENTS ] AUX23 , AUX14 | ident AUX17 AUX23 , AUX14 | ident AUX23 , AUX14 | int_constant , AUX14 | string_constant , AUX14 | null , AUX14 | float_constant , AUX14 | ( NUMEXPRESSION ) , AUX14 | [ ARRAYCONTENTS ] , AUX14 | ident AUX17 , AUX14 | ident , AUX14 | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 , | SIGNAL AUX10 AUX22 , | SIGNAL AUX10 AUX23 , | SIGNAL AUX10 , | SIGNAL AUX10 AUX23 AUX22 , AUX14 | SIGNAL AUX10 AUX22 , AUX14 | SIGNAL AUX10 AUX23 , AUX14 | SIGNAL AUX10 , AUX14
=======
A ::= & | RETURNSTAT ; | { STATELIST } | FUNCCALL ; | ; | VARDECL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | def ident ( ) { STATELIST } FUNCLIST | def ident ( AUX25 ) { STATELIST } FUNCLIST | def ident ( ) { STATELIST } | def ident ( AUX25 ) { STATELIST }
ARRAYCONTENTS ::= = EXPRESSION | = EXPRESSION , ARRAYCONTENTS
AUX1 ::= { STATELIST } | ; | VARDECL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | ident ( ) ; | ident ( AUX13 ) ; | return ; | return AUX14 ;
AUX10 ::= float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident
AUX13 ::= ident | ident , | ident , AUX13
AUX14 ::= float_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | int_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | float_constant AUX22 | string_constant AUX22 | null AUX22 | int_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | float_constant AUX23 | string_constant AUX23 | null AUX23 | int_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | float_constant AUX23 AUX22 , | string_constant AUX23 AUX22 , | null AUX23 AUX22 , | int_constant AUX23 AUX22 , | ( NUMEXPRESSION ) AUX23 AUX22 , | [ ARRAYCONTENTS ] AUX23 AUX22 , | ident AUX17 AUX23 AUX22 , | ident AUX23 AUX22 , | float_constant AUX22 , | string_constant AUX22 , | null AUX22 , | int_constant AUX22 , | ( NUMEXPRESSION ) AUX22 , | [ ARRAYCONTENTS ] AUX22 , | ident AUX17 AUX22 , | ident AUX22 , | float_constant AUX23 , | string_constant AUX23 , | null AUX23 , | int_constant AUX23 , | ( NUMEXPRESSION ) AUX23 , | [ ARRAYCONTENTS ] AUX23 , | ident AUX17 AUX23 , | ident AUX23 , | float_constant , | string_constant , | null , | int_constant , | ( NUMEXPRESSION ) , | [ ARRAYCONTENTS ] , | ident AUX17 , | ident , | float_constant AUX23 AUX22 , AUX14 | string_constant AUX23 AUX22 , AUX14 | null AUX23 AUX22 , AUX14 | int_constant AUX23 AUX22 , AUX14 | ( NUMEXPRESSION ) AUX23 AUX22 , AUX14 | [ ARRAYCONTENTS ] AUX23 AUX22 , AUX14 | ident AUX17 AUX23 AUX22 , AUX14 | ident AUX23 AUX22 , AUX14 | float_constant AUX22 , AUX14 | string_constant AUX22 , AUX14 | null AUX22 , AUX14 | int_constant AUX22 , AUX14 | ( NUMEXPRESSION ) AUX22 , AUX14 | [ ARRAYCONTENTS ] AUX22 , AUX14 | ident AUX17 AUX22 , AUX14 | ident AUX22 , AUX14 | float_constant AUX23 , AUX14 | string_constant AUX23 , AUX14 | null AUX23 , AUX14 | int_constant AUX23 , AUX14 | ( NUMEXPRESSION ) AUX23 , AUX14 | [ ARRAYCONTENTS ] AUX23 , AUX14 | ident AUX17 AUX23 , AUX14 | ident AUX23 , AUX14 | float_constant , AUX14 | string_constant , AUX14 | null , AUX14 | int_constant , AUX14 | ( NUMEXPRESSION ) , AUX14 | [ ARRAYCONTENTS ] , AUX14 | ident AUX17 , AUX14 | ident , AUX14 | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 , | SIGNAL AUX10 AUX22 , | SIGNAL AUX10 AUX23 , | SIGNAL AUX10 , | SIGNAL AUX10 AUX23 AUX22 , AUX14 | SIGNAL AUX10 AUX22 , AUX14 | SIGNAL AUX10 AUX23 , AUX14 | SIGNAL AUX10 , AUX14
>>>>>>> d4684ba66b06ca62801a019cead7897ac498959d
AUX17 ::= [ NUMEXPRESSION ] AUX17 | [ ] AUX17 | [ NUMEXPRESSION ] | [ ]
AUX19 ::= [ int_constant ] AUX19 | [ int_constant ]
AUX20 ::= [ NUMEXPRESSION ] AUX20 | [ NUMEXPRESSION ]
AUX22 ::= SIGNAL TERM AUX22 | SIGNAL TERM
AUX23 ::= OPERATION UNARYEXPR AUX23 | OPERATION UNARYEXPR
AUX25 ::= TYPE LVALUE | TYPE LVALUE , | TYPE LVALUE , AUX25
<<<<<<< HEAD
AUX3 ::= int_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | float_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | int_constant AUX22 | string_constant AUX22 | null AUX22 | float_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | int_constant AUX23 | string_constant AUX23 | null AUX23 | float_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | ident AUX17 AUX22 | ident AUX22 | ident AUX17 AUX23 | ident AUX23 | ident AUX17 | ident | ident ( ) | ident ( AUX13 ) | new TYPE AUX20 | int_constant AUX23 AUX22 COMPARE NUMEXPRESSION | string_constant AUX23 AUX22 COMPARE NUMEXPRESSION | null AUX23 AUX22 COMPARE NUMEXPRESSION | float_constant AUX23 AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE NUMEXPRESSION | int_constant AUX22 COMPARE NUMEXPRESSION | string_constant AUX22 COMPARE NUMEXPRESSION | null AUX22 COMPARE NUMEXPRESSION | float_constant AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX22 COMPARE NUMEXPRESSION | int_constant AUX23 COMPARE NUMEXPRESSION | string_constant AUX23 COMPARE NUMEXPRESSION | null AUX23 COMPARE NUMEXPRESSION | float_constant AUX23 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 COMPARE NUMEXPRESSION | int_constant COMPARE NUMEXPRESSION | string_constant COMPARE NUMEXPRESSION | null COMPARE NUMEXPRESSION | float_constant COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] COMPARE NUMEXPRESSION | ident AUX17 AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX22 COMPARE NUMEXPRESSION | ident AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX23 COMPARE NUMEXPRESSION | ident AUX23 COMPARE NUMEXPRESSION | ident AUX17 COMPARE NUMEXPRESSION | ident COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 COMPARE NUMEXPRESSION | SIGNAL AUX10 COMPARE NUMEXPRESSION
COMPARE ::= > | < | == | <= | != | >=
EXPRESSION ::= int_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | float_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | int_constant AUX22 | string_constant AUX22 | null AUX22 | float_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | int_constant AUX23 | string_constant AUX23 | null AUX23 | float_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | int_constant AUX23 AUX22 COMPARE NUMEXPRESSION | string_constant AUX23 AUX22 COMPARE NUMEXPRESSION | null AUX23 AUX22 COMPARE NUMEXPRESSION | float_constant AUX23 AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX23 AUX22 COMPARE NUMEXPRESSION | int_constant AUX22 COMPARE NUMEXPRESSION | string_constant AUX22 COMPARE NUMEXPRESSION | null AUX22 COMPARE NUMEXPRESSION | float_constant AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX22 COMPARE NUMEXPRESSION | ident AUX22 COMPARE NUMEXPRESSION | int_constant AUX23 COMPARE NUMEXPRESSION | string_constant AUX23 COMPARE NUMEXPRESSION | null AUX23 COMPARE NUMEXPRESSION | float_constant AUX23 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 COMPARE NUMEXPRESSION | ident AUX17 AUX23 COMPARE NUMEXPRESSION | ident AUX23 COMPARE NUMEXPRESSION | int_constant COMPARE NUMEXPRESSION | string_constant COMPARE NUMEXPRESSION | null COMPARE NUMEXPRESSION | float_constant COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] COMPARE NUMEXPRESSION | ident AUX17 COMPARE NUMEXPRESSION | ident COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 COMPARE NUMEXPRESSION | SIGNAL AUX10 COMPARE NUMEXPRESSION
=======
AUX3 ::= float_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | int_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | float_constant AUX22 | string_constant AUX22 | null AUX22 | int_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | float_constant AUX23 | string_constant AUX23 | null AUX23 | int_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | ident AUX17 AUX22 | ident AUX22 | ident AUX17 AUX23 | ident AUX23 | ident AUX17 | ident | ident ( ) | ident ( AUX13 ) | new TYPE AUX20 | float_constant AUX23 AUX22 COMPARE NUMEXPRESSION | string_constant AUX23 AUX22 COMPARE NUMEXPRESSION | null AUX23 AUX22 COMPARE NUMEXPRESSION | int_constant AUX23 AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE NUMEXPRESSION | float_constant AUX22 COMPARE NUMEXPRESSION | string_constant AUX22 COMPARE NUMEXPRESSION | null AUX22 COMPARE NUMEXPRESSION | int_constant AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX22 COMPARE NUMEXPRESSION | float_constant AUX23 COMPARE NUMEXPRESSION | string_constant AUX23 COMPARE NUMEXPRESSION | null AUX23 COMPARE NUMEXPRESSION | int_constant AUX23 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 COMPARE NUMEXPRESSION | float_constant COMPARE NUMEXPRESSION | string_constant COMPARE NUMEXPRESSION | null COMPARE NUMEXPRESSION | int_constant COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] COMPARE NUMEXPRESSION | ident AUX17 AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX22 COMPARE NUMEXPRESSION | ident AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX23 COMPARE NUMEXPRESSION | ident AUX23 COMPARE NUMEXPRESSION | ident AUX17 COMPARE NUMEXPRESSION | ident COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 COMPARE NUMEXPRESSION | SIGNAL AUX10 COMPARE NUMEXPRESSION
COMPARE ::= == | > | != | >= | <= | <
EXPRESSION ::= float_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | int_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | float_constant AUX22 | string_constant AUX22 | null AUX22 | int_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | float_constant AUX23 | string_constant AUX23 | null AUX23 | int_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | float_constant AUX23 AUX22 COMPARE NUMEXPRESSION | string_constant AUX23 AUX22 COMPARE NUMEXPRESSION | null AUX23 AUX22 COMPARE NUMEXPRESSION | int_constant AUX23 AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX23 AUX22 COMPARE NUMEXPRESSION | ident AUX23 AUX22 COMPARE NUMEXPRESSION | float_constant AUX22 COMPARE NUMEXPRESSION | string_constant AUX22 COMPARE NUMEXPRESSION | null AUX22 COMPARE NUMEXPRESSION | int_constant AUX22 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX22 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX22 COMPARE NUMEXPRESSION | ident AUX17 AUX22 COMPARE NUMEXPRESSION | ident AUX22 COMPARE NUMEXPRESSION | float_constant AUX23 COMPARE NUMEXPRESSION | string_constant AUX23 COMPARE NUMEXPRESSION | null AUX23 COMPARE NUMEXPRESSION | int_constant AUX23 COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) AUX23 COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] AUX23 COMPARE NUMEXPRESSION | ident AUX17 AUX23 COMPARE NUMEXPRESSION | ident AUX23 COMPARE NUMEXPRESSION | float_constant COMPARE NUMEXPRESSION | string_constant COMPARE NUMEXPRESSION | null COMPARE NUMEXPRESSION | int_constant COMPARE NUMEXPRESSION | ( NUMEXPRESSION ) COMPARE NUMEXPRESSION | [ ARRAYCONTENTS ] COMPARE NUMEXPRESSION | ident AUX17 COMPARE NUMEXPRESSION | ident COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX22 COMPARE NUMEXPRESSION | SIGNAL AUX10 AUX23 COMPARE NUMEXPRESSION | SIGNAL AUX10 COMPARE NUMEXPRESSION
>>>>>>> d4684ba66b06ca62801a019cead7897ac498959d
FUNCCALL ::= ident ( ) | ident ( AUX13 )
FUNCLIST ::= def ident ( ) { STATELIST } FUNCLIST | def ident ( AUX25 ) { STATELIST } FUNCLIST | def ident ( ) { STATELIST } | def ident ( AUX25 ) { STATELIST }
LVALUE ::= ident AUX17 | ident
<<<<<<< HEAD
NUMEXPRESSION ::= int_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | float_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | int_constant AUX22 | string_constant AUX22 | null AUX22 | float_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | int_constant AUX23 | string_constant AUX23 | null AUX23 | float_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10
OPERATION ::= * | / | %
RETURNSTAT ::= return | return AUX14
SIGNAL ::= - | +
STATELIST ::= ; | { STATELIST } | break ; | VARDECL ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | ; STATELIST | { STATELIST } STATELIST | break ; STATELIST | VARDECL ; STATELIST | print EXPRESSION ; STATELIST | read LVALUE ; STATELIST | LVALUE = AUX3 ; STATELIST | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 STATELIST | if ( EXPRESSION ) AUX1 STATELIST | if ( EXPRESSION ) AUX1 else AUX1 STATELIST | ident ( ) ; | ident ( AUX13 ) ; | ident ( ) ; STATELIST | ident ( AUX13 ) ; STATELIST | return ; | return AUX14 ; | return ; STATELIST | return AUX14 ; STATELIST
TERM ::= int_constant AUX23 | string_constant AUX23 | null AUX23 | float_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10 AUX23 | SIGNAL AUX10
TYPE ::= string | float | int
UNARYEXPR ::= int_constant | string_constant | null | float_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10
=======
NUMEXPRESSION ::= float_constant AUX23 AUX22 | string_constant AUX23 AUX22 | null AUX23 AUX22 | int_constant AUX23 AUX22 | ( NUMEXPRESSION ) AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX17 AUX23 AUX22 | ident AUX23 AUX22 | float_constant AUX22 | string_constant AUX22 | null AUX22 | int_constant AUX22 | ( NUMEXPRESSION ) AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX17 AUX22 | ident AUX22 | float_constant AUX23 | string_constant AUX23 | null AUX23 | int_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10
OPERATION ::= / | * | %
RETURNSTAT ::= return | return AUX14
SIGNAL ::= + | -
STATELIST ::= { STATELIST } | ; | VARDECL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) AUX1 | if ( EXPRESSION ) AUX1 else AUX1 | { STATELIST } STATELIST | ; STATELIST | VARDECL ; STATELIST | break ; STATELIST | print EXPRESSION ; STATELIST | read LVALUE ; STATELIST | LVALUE = AUX3 ; STATELIST | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 STATELIST | if ( EXPRESSION ) AUX1 STATELIST | if ( EXPRESSION ) AUX1 else AUX1 STATELIST | ident ( ) ; | ident ( AUX13 ) ; | ident ( ) ; STATELIST | ident ( AUX13 ) ; STATELIST | return ; | return AUX14 ; | return ; STATELIST | return AUX14 ; STATELIST
TERM ::= float_constant AUX23 | string_constant AUX23 | null AUX23 | int_constant AUX23 | ( NUMEXPRESSION ) AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX17 AUX23 | ident AUX23 | float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10 AUX23 | SIGNAL AUX10
TYPE ::= string | int | float
UNARYEXPR ::= float_constant | string_constant | null | int_constant | ( NUMEXPRESSION ) | [ ARRAYCONTENTS ] | ident AUX17 | ident | SIGNAL AUX10
>>>>>>> d4684ba66b06ca62801a019cead7897ac498959d
VARDECL ::= TYPE ident AUX19 | TYPE ident
