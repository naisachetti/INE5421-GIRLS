A ::= & | { STATELIST } | RETURNSTAT ; | ; | VARDECL ; | FUNCCALL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) { AUX1 } AUX17 | if ( EXPRESSION ) { AUX1 } | if ( EXPRESSION ) { AUX1 } AUX17 else { AUX1 } | if ( EXPRESSION ) { AUX1 } else { AUX1 } | def ident ( ) { STATELIST } FUNCLIST | def ident ( AUX26 ) { STATELIST } FUNCLIST | def ident ( ) { STATELIST } | def ident ( AUX26 ) { STATELIST }
ARRAYCONTENTS ::= = EXPRESSION | = EXPRESSION , ARRAYCONTENTS
AUX1 ::= { STATELIST } | ; | VARDECL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) { AUX1 } AUX17 | if ( EXPRESSION ) { AUX1 } | if ( EXPRESSION ) { AUX1 } AUX17 else { AUX1 } | if ( EXPRESSION ) { AUX1 } else { AUX1 } | ident ( ) ; | ident ( AUX15 ) ; | return ; | return AUX16 ;
AUX10 ::= null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | ( AUX11 )
AUX11 ::= null AUX23 AUX22 | string_constant AUX23 AUX22 | int_constant AUX23 AUX22 | float_constant AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX25 AUX23 AUX22 | ident AUX23 AUX22 | null AUX22 | string_constant AUX22 | int_constant AUX22 | float_constant AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX25 AUX22 | ident AUX22 | null AUX23 | string_constant AUX23 | int_constant AUX23 | float_constant AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX25 AUX23 | ident AUX23 | null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | ( AUX11 ) AUX23 AUX22 | ( AUX11 ) AUX22 | ( AUX11 ) AUX23 | ( AUX11 ) | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10
AUX13 ::= int_constant | ident
AUX15 ::= ident | ident , | ident , AUX15
AUX16 ::= null AUX23 AUX22 | string_constant AUX23 AUX22 | int_constant AUX23 AUX22 | float_constant AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX25 AUX23 AUX22 | ident AUX23 AUX22 | null AUX22 | string_constant AUX22 | int_constant AUX22 | float_constant AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX25 AUX22 | ident AUX22 | null AUX23 | string_constant AUX23 | int_constant AUX23 | float_constant AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX25 AUX23 | ident AUX23 | null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | null AUX23 AUX22 , | string_constant AUX23 AUX22 , | int_constant AUX23 AUX22 , | float_constant AUX23 AUX22 , | [ ARRAYCONTENTS ] AUX23 AUX22 , | ident AUX25 AUX23 AUX22 , | ident AUX23 AUX22 , | null AUX22 , | string_constant AUX22 , | int_constant AUX22 , | float_constant AUX22 , | [ ARRAYCONTENTS ] AUX22 , | ident AUX25 AUX22 , | ident AUX22 , | null AUX23 , | string_constant AUX23 , | int_constant AUX23 , | float_constant AUX23 , | [ ARRAYCONTENTS ] AUX23 , | ident AUX25 AUX23 , | ident AUX23 , | null , | string_constant , | int_constant , | float_constant , | [ ARRAYCONTENTS ] , | ident AUX25 , | ident , | null AUX23 AUX22 , AUX16 | string_constant AUX23 AUX22 , AUX16 | int_constant AUX23 AUX22 , AUX16 | float_constant AUX23 AUX22 , AUX16 | [ ARRAYCONTENTS ] AUX23 AUX22 , AUX16 | ident AUX25 AUX23 AUX22 , AUX16 | ident AUX23 AUX22 , AUX16 | null AUX22 , AUX16 | string_constant AUX22 , AUX16 | int_constant AUX22 , AUX16 | float_constant AUX22 , AUX16 | [ ARRAYCONTENTS ] AUX22 , AUX16 | ident AUX25 AUX22 , AUX16 | ident AUX22 , AUX16 | null AUX23 , AUX16 | string_constant AUX23 , AUX16 | int_constant AUX23 , AUX16 | float_constant AUX23 , AUX16 | [ ARRAYCONTENTS ] AUX23 , AUX16 | ident AUX25 AUX23 , AUX16 | ident AUX23 , AUX16 | null , AUX16 | string_constant , AUX16 | int_constant , AUX16 | float_constant , AUX16 | [ ARRAYCONTENTS ] , AUX16 | ident AUX25 , AUX16 | ident , AUX16 | ( AUX11 ) AUX23 AUX22 | ( AUX11 ) AUX22 | ( AUX11 ) AUX23 | ( AUX11 ) | ( AUX11 ) AUX23 AUX22 , | ( AUX11 ) AUX22 , | ( AUX11 ) AUX23 , | ( AUX11 ) , | ( AUX11 ) AUX23 AUX22 , AUX16 | ( AUX11 ) AUX22 , AUX16 | ( AUX11 ) AUX23 , AUX16 | ( AUX11 ) , AUX16 | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 , | SIGNAL AUX10 AUX22 , | SIGNAL AUX10 AUX23 , | SIGNAL AUX10 , | SIGNAL AUX10 AUX23 AUX22 , AUX16 | SIGNAL AUX10 AUX22 , AUX16 | SIGNAL AUX10 AUX23 , AUX16 | SIGNAL AUX10 , AUX16
AUX17 ::= elif ( EXPRESSION ) { AUX1 } AUX17 | elif ( EXPRESSION ) { AUX1 }
AUX20 ::= [ AUX11 ] | [ AUX11 ] AUX20
AUX22 ::= SIGNAL TERM AUX22 | SIGNAL TERM
AUX23 ::= OPERATION UNARYEXPR AUX23 | OPERATION UNARYEXPR
AUX25 ::= [ ] AUX25 | [ AUX11 ] AUX25 | [ ] | [ AUX11 ]
AUX26 ::= TYPE LVALUE | TYPE LVALUE , | TYPE LVALUE , AUX26
AUX27 ::= [ AUX13 ] AUX27 | [ AUX13 ]
AUX3 ::= null AUX23 AUX22 | string_constant AUX23 AUX22 | int_constant AUX23 AUX22 | float_constant AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | null AUX22 | string_constant AUX22 | int_constant AUX22 | float_constant AUX22 | [ ARRAYCONTENTS ] AUX22 | null AUX23 | string_constant AUX23 | int_constant AUX23 | float_constant AUX23 | [ ARRAYCONTENTS ] AUX23 | null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 AUX23 AUX22 | ident AUX23 AUX22 | ident AUX25 AUX22 | ident AUX22 | ident AUX25 AUX23 | ident AUX23 | ident AUX25 | ident | ident ( ) | ident ( AUX15 ) | ( AUX11 ) AUX23 AUX22 | ( AUX11 ) AUX22 | ( AUX11 ) AUX23 | ( AUX11 ) | new TYPE AUX20 | ( AUX11 ) AUX23 AUX22 COMPARE AUX11 | null AUX23 AUX22 COMPARE AUX11 | string_constant AUX23 AUX22 COMPARE AUX11 | int_constant AUX23 AUX22 COMPARE AUX11 | float_constant AUX23 AUX22 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE AUX11 | ( AUX11 ) AUX22 COMPARE AUX11 | null AUX22 COMPARE AUX11 | string_constant AUX22 COMPARE AUX11 | int_constant AUX22 COMPARE AUX11 | float_constant AUX22 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX22 COMPARE AUX11 | ( AUX11 ) AUX23 COMPARE AUX11 | null AUX23 COMPARE AUX11 | string_constant AUX23 COMPARE AUX11 | int_constant AUX23 COMPARE AUX11 | float_constant AUX23 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX23 COMPARE AUX11 | ( AUX11 ) COMPARE AUX11 | null COMPARE AUX11 | string_constant COMPARE AUX11 | int_constant COMPARE AUX11 | float_constant COMPARE AUX11 | [ ARRAYCONTENTS ] COMPARE AUX11 | ident AUX25 AUX23 AUX22 COMPARE AUX11 | ident AUX23 AUX22 COMPARE AUX11 | ident AUX25 AUX22 COMPARE AUX11 | ident AUX22 COMPARE AUX11 | ident AUX25 AUX23 COMPARE AUX11 | ident AUX23 COMPARE AUX11 | ident AUX25 COMPARE AUX11 | ident COMPARE AUX11 | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE AUX11 | SIGNAL AUX10 AUX22 COMPARE AUX11 | SIGNAL AUX10 AUX23 COMPARE AUX11 | SIGNAL AUX10 COMPARE AUX11
COMPARE ::= <= | == | >= | > | != | <
EXPRESSION ::= null AUX23 AUX22 | string_constant AUX23 AUX22 | int_constant AUX23 AUX22 | float_constant AUX23 AUX22 | [ ARRAYCONTENTS ] AUX23 AUX22 | ident AUX25 AUX23 AUX22 | ident AUX23 AUX22 | null AUX22 | string_constant AUX22 | int_constant AUX22 | float_constant AUX22 | [ ARRAYCONTENTS ] AUX22 | ident AUX25 AUX22 | ident AUX22 | null AUX23 | string_constant AUX23 | int_constant AUX23 | float_constant AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX25 AUX23 | ident AUX23 | null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | ( AUX11 ) AUX23 AUX22 | ( AUX11 ) AUX22 | ( AUX11 ) AUX23 | ( AUX11 ) | ( AUX11 ) AUX23 AUX22 COMPARE AUX11 | null AUX23 AUX22 COMPARE AUX11 | string_constant AUX23 AUX22 COMPARE AUX11 | int_constant AUX23 AUX22 COMPARE AUX11 | float_constant AUX23 AUX22 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX23 AUX22 COMPARE AUX11 | ident AUX25 AUX23 AUX22 COMPARE AUX11 | ident AUX23 AUX22 COMPARE AUX11 | ( AUX11 ) AUX22 COMPARE AUX11 | null AUX22 COMPARE AUX11 | string_constant AUX22 COMPARE AUX11 | int_constant AUX22 COMPARE AUX11 | float_constant AUX22 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX22 COMPARE AUX11 | ident AUX25 AUX22 COMPARE AUX11 | ident AUX22 COMPARE AUX11 | ( AUX11 ) AUX23 COMPARE AUX11 | null AUX23 COMPARE AUX11 | string_constant AUX23 COMPARE AUX11 | int_constant AUX23 COMPARE AUX11 | float_constant AUX23 COMPARE AUX11 | [ ARRAYCONTENTS ] AUX23 COMPARE AUX11 | ident AUX25 AUX23 COMPARE AUX11 | ident AUX23 COMPARE AUX11 | ( AUX11 ) COMPARE AUX11 | null COMPARE AUX11 | string_constant COMPARE AUX11 | int_constant COMPARE AUX11 | float_constant COMPARE AUX11 | [ ARRAYCONTENTS ] COMPARE AUX11 | ident AUX25 COMPARE AUX11 | ident COMPARE AUX11 | SIGNAL AUX10 AUX23 AUX22 | SIGNAL AUX10 AUX22 | SIGNAL AUX10 AUX23 | SIGNAL AUX10 | SIGNAL AUX10 AUX23 AUX22 COMPARE AUX11 | SIGNAL AUX10 AUX22 COMPARE AUX11 | SIGNAL AUX10 AUX23 COMPARE AUX11 | SIGNAL AUX10 COMPARE AUX11
FUNCCALL ::= ident ( ) | ident ( AUX15 )
FUNCLIST ::= def ident ( ) { STATELIST } FUNCLIST | def ident ( AUX26 ) { STATELIST } FUNCLIST | def ident ( ) { STATELIST } | def ident ( AUX26 ) { STATELIST }
LVALUE ::= ident AUX25 | ident
OPERATION ::= % | / | *
RETURNSTAT ::= return | return AUX16
SIGNAL ::= + | -
STATELIST ::= { STATELIST } | ; | VARDECL ; | break ; | print EXPRESSION ; | read LVALUE ; | LVALUE = AUX3 ; | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 | if ( EXPRESSION ) { AUX1 } AUX17 | if ( EXPRESSION ) { AUX1 } | if ( EXPRESSION ) { AUX1 } AUX17 else { AUX1 } | if ( EXPRESSION ) { AUX1 } else { AUX1 } | { STATELIST } STATELIST | ; STATELIST | VARDECL ; STATELIST | break ; STATELIST | print EXPRESSION ; STATELIST | read LVALUE ; STATELIST | LVALUE = AUX3 ; STATELIST | for ( LVALUE = AUX3 ; EXPRESSION ; LVALUE = AUX3 ) AUX1 STATELIST | if ( EXPRESSION ) { AUX1 } AUX17 STATELIST | if ( EXPRESSION ) { AUX1 } STATELIST | if ( EXPRESSION ) { AUX1 } AUX17 else { AUX1 } STATELIST | if ( EXPRESSION ) { AUX1 } else { AUX1 } STATELIST | ident ( ) ; | ident ( AUX15 ) ; | ident ( ) ; STATELIST | ident ( AUX15 ) ; STATELIST | return ; | return AUX16 ; | return ; STATELIST | return AUX16 ; STATELIST
TERM ::= null AUX23 | string_constant AUX23 | int_constant AUX23 | float_constant AUX23 | [ ARRAYCONTENTS ] AUX23 | ident AUX25 AUX23 | ident AUX23 | null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | ( AUX11 ) AUX23 | ( AUX11 ) | SIGNAL AUX10 AUX23 | SIGNAL AUX10
TYPE ::= float | int | string
UNARYEXPR ::= null | string_constant | int_constant | float_constant | [ ARRAYCONTENTS ] | ident AUX25 | ident | ( AUX11 ) | SIGNAL AUX10
VARDECL ::= TYPE ident AUX27 | TYPE ident
