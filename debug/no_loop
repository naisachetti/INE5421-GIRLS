A'1 ::= PROGRAM | &
PROGRAM ::= AUX12
FUNCLIST ::= FUNCDEF | FUNCDEF FUNCLIST
FUNCDEF ::= def ident ( PARAMLIST ) { STATELIST } | def ident ( ) { STATELIST }
FUNCCALL ::= ident ( PARAMLISTCALL ) | ident ( )
PRINTSTAT ::= print EXPRESSION
READSTAT ::= read LVALUE
RETURNSTAT ::= return RETURNLIST | return
FORSTAT ::= for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
ARRAY ::= [ ARRAYCONTENTS ]
AUX0 ::= string | float | int
STATEMENT ::= AUX1
AUX1 ::= FORSTAT | ; | IFSTAT | RETURNSTAT ; | { STATELIST } | ATRIBSTAT ; | break ; | FUNCCALL ; | PRINTSTAT ; | READSTAT ; | VARDECL ;
ATRIBSTAT ::= LVALUE = AUX3
AUX3 ::= EXPRESSION | ALLOCEXPRESSION | FUNCCALL
AUX6 ::= > | < | == | <= | != | >=
AUX7 ::= - | +
AUX8 ::= * | / | %
FACTOR ::= AUX10
AUX10 ::= ARRAY | LVALUE | int_constant | string_constant | null | float_constant | ( NUMEXPRESSION )
AUX12 ::= STATEMENT | FUNCLIST
PARAMLISTCALL ::= AUX13
AUX13 ::= ident , PARAMLISTCALL | ident | ident ,
RETURNLIST ::= AUX14
AUX14 ::= NUMEXPRESSION | NUMEXPRESSION , RETURNLIST | NUMEXPRESSION ,
IFSTAT ::= if ( EXPRESSION ) STATEMENT AUX15 | if ( EXPRESSION ) STATEMENT
AUX15 ::= else STATEMENT
STATELIST ::= STATEMENT AUX16 | STATEMENT
AUX16 ::= STATELIST
LVALUE ::= ident AUX17 | ident
AUX17 ::= [ NUMEXPRESSION ] AUX17 | [ ] AUX17 | [ NUMEXPRESSION ] | [ ]
ARRAYCONTENTS ::= = EXPRESSION AUX18 | = EXPRESSION
AUX18 ::= , ARRAYCONTENTS
VARDECL ::= AUX0 ident AUX19 | AUX0 ident
AUX19 ::= [ int_constant ] AUX19 | [ int_constant ]
ALLOCEXPRESSION ::= new AUX0 AUX20
AUX20 ::= [ NUMEXPRESSION ] AUX20 | [ NUMEXPRESSION ]
EXPRESSION ::= NUMEXPRESSION AUX21 | NUMEXPRESSION
AUX21 ::= AUX6 NUMEXPRESSION
NUMEXPRESSION ::= TERM AUX22 | TERM
AUX22 ::= AUX7 TERM AUX22 | AUX7 TERM
TERM ::= UNARYEXPR AUX23 | UNARYEXPR
AUX23 ::= AUX8 UNARYEXPR AUX23 | AUX8 UNARYEXPR
UNARYEXPR ::= AUX24 FACTOR | FACTOR
AUX24 ::= AUX7
PARAMLIST ::= AUX25
AUX25 ::= AUX0 LVALUE , PARAMLIST | AUX0 LVALUE | AUX0 LVALUE ,
