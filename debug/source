PROGRAM ::= AUX17
FUNCLIST ::= FUNCDEF | FUNCDEF FUNCLIST
FUNCDEF ::= def ident ( PARAMLIST ) STATEMENT
LEFTMULTIATRIBSTAT ::= LVALUE , LEFTMULTIATRIBSTAT | LVALUE
FUNCCALL ::= ident ( PARAMLISTCALL )
PRINTSTAT ::= print EXPRESSION
READSTAT ::= read LVALUE
RETURNSTAT ::= return RETURNLIST
FORSTAT ::= for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
ARRAY ::= [ ARRAYCONTENTS ]
AUX0 ::= string | float | int
STATEMENT ::= AUX1
AUX2 ::= string | float | int
ATRIBSTAT ::= LVALUE = AUX3
AUX3 ::= EXPRESSION | FUNCCALL | ALLOCEXPRESSION
MULTIATRIBSTAT ::= ( LEFTMULTIATRIBSTAT ) = AUX4
AUX4 ::= FUNCCALL | ( RIGHTMULTIATRIBSTAT )
AUX5 ::= EXPRESSION | FUNCCALL | ALLOCEXPRESSION
AUX6 ::= NUMEXPRESSION | ident
AUX7 ::= string | float | int
AUX8 ::= == | >= | <= | != | < | >
AUX9 ::= - | +
AUX10 ::= * | / | %
AUX11 ::= - | +
FACTOR ::= AUX12
AUX12 ::= LVALUE | ( NUMEXPRESSION ) | ARRAY | float_constant | string_constant | null | int_constant
AUX13 ::= string | float | int
AUX14 ::= ident | int_constant
RIGHTMULTIATRIBSTAT ::= AUX5 , RIGHTMULTIATRIBSTAT | AUX15
AUX15 ::= EXPRESSION | FUNCCALL | ALLOCEXPRESSION
AUX16 ::= NUMEXPRESSION | ident
AUX17 ::= STATEMENT | & | FUNCLIST
RETURNLIST ::= AUX18
AUX18 ::= NUMEXPRESSION | NUMEXPRESSION , RETURNLIST | &
AUX19 ::= STATEMENT | STATEMENT AUX19
AUX20 ::= NUMEXPRESSION | LVALUE | &
ARRAYCONTENTS ::= = EXPRESSION AUX21
AUX21 ::= & | , ARRAYCONTENTS
AUX1 ::= { AUX22 } | IFSTAT | PRINTSTAT ; | break ; | MULTIATRIBSTAT ; | ; | RETURNSTAT ; | READSTAT ; | VARDECL ; | ATRIBSTAT ; | FUNCCALL ; | FORSTAT
AUX22 ::= STATEMENT | STATEMENT AUX22
ALLOCEXPRESSION ::= new AUX7 AUX23
AUX23 ::= [ NUMEXPRESSION ] AUX23 | [ NUMEXPRESSION ]
EXPRESSION ::= NUMEXPRESSION AUX24
AUX24 ::= & | AUX8 NUMEXPRESSION
NUMEXPRESSION ::= TERM AUX25
AUX25 ::= & | AUX9 TERM AUX25
TERM ::= UNARYEXPR AUX26
AUX26 ::= AUX10 UNARYEXPR AUX26 | &
UNARYEXPR ::= AUX27 FACTOR
AUX27 ::= & | AUX11
PARAMLIST ::= AUX28
AUX28 ::= & | AUX13 LVALUE | AUX0 LVALUE , PARAMLIST
VARDECL ::= AUX2 ident AUX29
AUX29 ::= & | [ AUX14 ] AUX29
PARAMLISTCALL ::= AUX30
AUX30 ::= & | AUX16 | AUX6 , PARAMLISTCALL
AUX31 ::= STATEMENT | STATEMENT AUX31
LVALUE ::= ident AUX32
AUX32 ::= & | [ AUX20 ] AUX32
AUX33 ::= & | elif ( EXPRESSION ) { AUX31 } AUX33
IFSTAT ::= if ( EXPRESSION ) { AUX19 } AUX33 AUX34
AUX34 ::= & | else { STATEMENT }
