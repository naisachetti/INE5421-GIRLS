mkdir -p debug
echo "== ident float_constant * ( return <= , float string != else int int_constant % for >= null - read = elif > def ) if < break & string_constant + { print } ] new [ ; /" > debug/terminais.txt
python3 GIRLS.py compiladores pattern_searching.ccc
('comment', '~Procura por padrões não especificados dentro de uma string~')
('def', 'def')
('ident', 'mainPatternSearching')
('(', '(')
('string', 'string')
('ident', 'sequence')
(')', ')')
('{', '{')
('int', 'int')
('ident', 'seq_length')
(';', ';')
('ident', 'seq_length')
('=', '=')
('ident', 'strlen')
('(', '(')
('ident', 'sequence')
(')', ')')
(';', ';')
('int', 'int')
('ident', 'pattern_length')
(';', ';')
('ident', 'pattern_length')
('=', '=')
('ident', 'floor')
('(', '(')
('ident', 'seq_length')
('/', '/')
('float_constant', '2.0')
(')', ')')
(';', ';')
('int', 'int')
('ident', 'i_min')
(';', ';')
('ident', 'i_min')
('=', '=')
('int_constant', '0')
(';', ';')
('int', 'int')
('ident', 'i_max')
(';', ';')
('ident', 'i_max')
('=', '=')
('ident', 'pattern_length')
('-', '-')
('int_constant', '1')
(';', ';')
('int', 'int')
('ident', 'i')
(';', ';')
('comment', '~Equivalente a while(True)~')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i')
('==', '==')
('ident', 'i')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
(')', ')')
('{', '{')
('comment', '~São procuradas sequências com tamanho mínimo de 2 caracteres~')
('if', 'if')
('(', '(')
('ident', 'pattern_length')
('<=', '<=')
('int_constant', '1')
(')', ')')
('{', '{')
('break', 'break')
(';', ';')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'i_max')
('+', '+')
('int_constant', '1')
('+', '+')
('ident', 'pattern_length')
('<', '<')
('ident', 'seq_length')
('-', '-')
('int_constant', '1')
(')', ')')
('{', '{')
('string', 'string')
('ident', 'pattern')
('[', '[')
('ident', 'pattern_length')
(']', ']')
(';', ';')
('ident', 'pattern')
('=', '=')
('ident', 'slice')
('(', '(')
('ident', 'sequence')
(',', ',')
('ident', 'i_min')
(',', ',')
('ident', 'i_max')
('+', '+')
('int_constant', '1')
(')', ')')
(';', ';')
('ident', 'naivePatternSearching')
('(', '(')
('ident', 'sequence')
(',', ',')
('ident', 'pattern')
(',', ',')
('ident', 'i_max')
('+', '+')
('int_constant', '1')
(')', ')')
(';', ';')
('ident', 'i_min')
('=', '=')
('ident', 'i_min')
('+', '+')
('int_constant', '1')
(';', ';')
('ident', 'i_max')
('=', '=')
('ident', 'i_max')
('+', '+')
('int_constant', '1')
(';', ';')
('}', '}')
('else', 'else')
('{', '{')
('ident', 'pattern_length')
('=', '=')
('ident', 'pattern_length')
('-', '-')
('int_constant', '1')
(';', ';')
('ident', 'i_min')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i_max')
('=', '=')
('ident', 'pattern_length')
('-', '-')
('int_constant', '1')
(';', ';')
('}', '}')
('}', '}')
('}', '}')
('comment', '~Pega uma porção de uma string entre i_min e i_max (i_max não incluso)~')
('def', 'def')
('ident', 'slice')
('(', '(')
('string', 'string')
('ident', 'word')
(',', ',')
('int', 'int')
('ident', 'i_min')
(',', ',')
('int', 'int')
('ident', 'i_max')
(')', ')')
('{', '{')
('int', 'int')
('ident', 'slice_length')
(';', ';')
('ident', 'slice_length')
('=', '=')
('ident', 'i_max')
('-', '-')
('ident', 'i_min')
(';', ';')
('string', 'string')
('ident', 'portion')
('[', '[')
('ident', 'slice_length')
(']', ']')
(';', ';')
('int', 'int')
('ident', 'i')
(';', ';')
('int', 'int')
('ident', 'i_portion')
(';', ';')
('ident', 'i_portion')
('=', '=')
('-', '-')
('int_constant', '1')
(';', ';')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('ident', 'i_min')
(';', ';')
('ident', 'i')
('<', '<')
('ident', 'i_max')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
('+', '+')
('int_constant', '1')
(')', ')')
('{', '{')
('ident', 'i_portion')
('=', '=')
('ident', 'i_portion')
('+', '+')
('int_constant', '1')
(';', ';')
('ident', 'portion')
('[', '[')
('ident', 'i_portion')
(']', ']')
('=', '=')
('ident', 'word')
('[', '[')
('ident', 'i')
(']', ']')
(';', ';')
('}', '}')
('return', 'return')
('ident', 'portion')
(';', ';')
('}', '}')
('comment', '~Algoritmo ingênuo. Adaptado de <https://www.geeksforgeeks.org/naive-algorithm-for-pattern-searching/>.~')
('def', 'def')
('ident', 'naivePatternSearching')
('(', '(')
('string', 'string')
('ident', 'sequence')
(',', ',')
('string', 'string')
('ident', 'pattern')
(',', ',')
('int', 'int')
('ident', 'i_start')
(')', ')')
('{', '{')
('int', 'int')
('ident', 'seq_length')
(';', ';')
('ident', 'seq_length')
('=', '=')
('ident', 'strlen')
('(', '(')
('ident', 'sequence')
(')', ')')
(';', ';')
('int', 'int')
('ident', 'pattern_length')
(';', ';')
('ident', 'pattern_length')
('=', '=')
('ident', 'strlen')
('(', '(')
('ident', 'pattern')
(')', ')')
(';', ';')
('int', 'int')
('ident', 'i_min')
(';', ';')
('ident', 'i_min')
('=', '=')
('ident', 'i_start')
(';', ';')
('int', 'int')
('ident', 'found')
(';', ';')
('ident', 'found')
('=', '=')
('int_constant', '0')
(';', ';')
('int', 'int')
('ident', 'i')
(';', ';')
('comment', '~Equivalente a while(True)~')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i')
('==', '==')
('ident', 'i')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
(')', ')')
('{', '{')
('if', 'if')
('(', '(')
('ident', 'i_min')
('+', '+')
('int_constant', '1')
('+', '+')
('ident', 'pattern_length')
('>=', '>=')
('ident', 'seq_length')
(')', ')')
('{', '{')
('break', 'break')
(';', ';')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'sequence')
('[', '[')
('ident', 'i_min')
(']', ']')
('==', '==')
('ident', 'pattern')
('[', '[')
('int_constant', '0')
(']', ']')
(')', ')')
('{', '{')
('int', 'int')
('ident', 'j')
(';', ';')
('for', 'for')
('(', '(')
('ident', 'j')
('=', '=')
('int_constant', '1')
(';', ';')
('ident', 'j')
('<', '<')
('ident', 'pattern_length')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
('+', '+')
('int_constant', '1')
(')', ')')
('{', '{')
('if', 'if')
('(', '(')
('ident', 'sequence')
('[', '[')
('ident', 'i_min')
('+', '+')
('ident', 'j')
(']', ']')
('!=', '!=')
('ident', 'pattern')
('[', '[')
('ident', 'j')
(']', ']')
(')', ')')
('{', '{')
('ident', 'i_min')
('=', '=')
('ident', 'i_min')
('+', '+')
('int_constant', '1')
(';', ';')
('break', 'break')
(';', ';')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'j')
('==', '==')
('ident', 'pattern_length')
('-', '-')
('int_constant', '1')
(')', ')')
('{', '{')
('string', 'string')
('ident', 'out')
(';', ';')
('ident', 'out')
('=', '=')
('string_constant', '')
('+', '+')
('ident', 'pattern')
(';', ';')
('print', 'print')
('(', '(')
('ident', 'out')
(')', ')')
(';', ';')
('ident', 'found')
('=', '=')
('int_constant', '1')
(';', ';')
('break', 'break')
(';', ';')
('}', '}')
('}', '}')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'found')
('!=', '!=')
('int_constant', '0')
(')', ')')
('{', '{')
('break', 'break')
(';', ';')
('}', '}')
('}', '}')
('}', '}')
('comment', '~Algoritmo de Rabin-Karp. Adaptado de <https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/>.~')
('def', 'def')
('ident', 'rabinKarpPatternSearch')
('(', '(')
('string', 'string')
('ident', 'pattern')
(',', ',')
('string', 'string')
('ident', 'sequence')
(',', ',')
('int', 'int')
('ident', 'prime_number')
(')', ')')
('{', '{')
('int', 'int')
('ident', 'm')
(';', ';')
('int', 'int')
('ident', 'n')
(';', ';')
('int', 'int')
('ident', 'i')
(';', ';')
('int', 'int')
('ident', 'j')
(';', ';')
('int', 'int')
('ident', 'p')
(';', ';')
('int', 'int')
('ident', 't')
(';', ';')
('int', 'int')
('ident', 'h')
(';', ';')
('ident', 'm')
('=', '=')
('ident', 'strlen')
('(', '(')
('ident', 'pattern')
(')', ')')
(';', ';')
('ident', 'n')
('=', '=')
('ident', 'strlen')
('(', '(')
('ident', 'sequence')
(')', ')')
(';', ';')
('ident', 'p')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 't')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'h')
('=', '=')
('int_constant', '0')
(';', ';')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i')
('<', '<')
('ident', 'm')
('-', '-')
('int_constant', '1')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
('+', '+')
('int_constant', '1')
(')', ')')
('ident', 'h')
('=', '=')
('(', '(')
('ident', 'h')
('*', '*')
('ident', 'd')
(')', ')')
('%', '%')
('ident', 'q')
(';', ';')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i')
('<', '<')
('ident', 'm')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
('+', '+')
('int_constant', '1')
(')', ')')
('{', '{')
('ident', 'p')
('=', '=')
('(', '(')
('ident', 'd')
('*', '*')
('ident', 'p')
('+', '+')
('ident', 'pattern')
('[', '[')
('ident', 'i')
(']', ']')
(')', ')')
('%', '%')
('ident', 'q')
(';', ';')
('ident', 't')
('=', '=')
('(', '(')
('ident', 'd')
('*', '*')
('ident', 't')
('+', '+')
('ident', 'sequence')
('[', '[')
('ident', 'i')
(']', ']')
(')', ')')
('%', '%')
('ident', 'q')
(';', ';')
('}', '}')
('for', 'for')
('(', '(')
('ident', 'i')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'i')
('<=', '<=')
('ident', 'n')
('-', '-')
('ident', 'm')
(';', ';')
('ident', 'i')
('=', '=')
('ident', 'i')
('+', '+')
('int_constant', '1')
(')', ')')
('{', '{')
('if', 'if')
('(', '(')
('ident', 'p')
('==', '==')
('ident', 't')
(')', ')')
('{', '{')
('for', 'for')
('(', '(')
('ident', 'j')
('=', '=')
('int_constant', '0')
(';', ';')
('ident', 'j')
('<', '<')
('ident', 'm')
(';', ';')
('ident', 'j')
('=', '=')
('ident', 'j')
('+', '+')
('int_constant', '1')
(')', ')')
('{', '{')
('if', 'if')
('(', '(')
('ident', 'sequence')
('[', '[')
('ident', 'i')
('+', '+')
('ident', 'j')
(']', ']')
('!=', '!=')
('ident', 'pattern')
('[', '[')
('ident', 'j')
(']', ']')
(')', ')')
('{', '{')
('break', 'break')
(';', ';')
('}', '}')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'j')
('==', '==')
('ident', 'm')
(')', ')')
('{', '{')
('string', 'string')
('ident', 'out')
(';', ';')
('ident', 'out')
('=', '=')
('string_constant', '')
('+', '+')
('ident', 'i')
(';', ';')
('print', 'print')
('(', '(')
('ident', 'out')
(')', ')')
(';', ';')
('}', '}')
('}', '}')
('if', 'if')
('(', '(')
('ident', 'i')
('<', '<')
('ident', 'n')
('-', '-')
('ident', 'm')
(')', ')')
('{', '{')
('ident', 't')
('=', '=')
('(', '(')
('ident', 'd')
('*', '*')
('(', '(')
('ident', 't')
('-', '-')
('ident', 'sequence')
('[', '[')
('ident', 'i')
(']', ']')
('*', '*')
('ident', 'h')
(')', ')')
('+', '+')
('ident', 'sequence')
('[', '[')
('ident', 'i')
('+', '+')
('ident', 'm')
(']', ']')
(')', ')')
('%', '%')
('ident', 'q')
(';', ';')
('if', 'if')
('(', '(')
('ident', 't')
('<', '<')
('int_constant', '0')
(')', ')')
('{', '{')
('ident', 't')
('=', '=')
('(', '(')
('ident', 't')
('+', '+')
('ident', 'q')
(')', ')')
(';', ';')
('}', '}')
('}', '}')
('}', '}')
('}', '}')
Gramatica Tratada com sucesso!
Calculando o firstpos da gramatica...
Calculando o followpos da gramatica... (Isso pode levar um tempo)
0.00% A
1.23% FUNCLIST
2.47% FUNCCALL
3.70% RETURNLIST
4.94% VARDECL_AUX1
6.17% PARAMLIST'1
7.41% MULTIATRIBSTAT'1
8.64% LEFTMULTIATRIBSTAT'1
9.88% A'3
11.11% LEFTMULTIATRIBSTAT'2
12.35% ATRIBSTAT_AUX1'2
13.58% RIGHTMULTIATRIBSTAT'3
14.81% RIGHTMULTIATRIBSTAT'6
16.05% TERM'2
17.28% EXPRESSION'1
18.52% STATELIST'3
19.75% NUMEXPRESSION'2
20.99% PARAMLISTCALL'2
22.22% PARAMLIST
23.46% VARDECL
24.69% VARDECL_AUX2
25.93% ELIFSTAT
27.16% ELSESTAT
28.40% ALLOCEXPRESSION_AUX1
29.63% A'1
30.86% ELIFSTAT'1
32.10% ALLOCEXPRESSION_AUX1'1
33.33% LVALUE_AUX1'1
34.57% A'4
35.80% RETURNLIST'2
37.04% RETURNLIST'4
38.27% RIGHTMULTIATRIBSTAT'5
39.51% PARAMLISTCALL'4
40.74% A'5
41.98% TYPE
43.21% ATRIBSTAT_AUX1
44.44% LEFTMULTIATRIBSTAT
45.68% UNARYEXPR
46.91% LVALUE
48.15% OPERATION
49.38% A'2
50.62% RETURNLIST'3
51.85% ATRIBSTAT_AUX1'4
53.09% RIGHTMULTIATRIBSTAT'4
54.32% PARAMLISTCALL'3
55.56% EXPRESSION_AUX1
56.79% TERM
58.02% ATRIBSTAT_AUX1'3
59.26% STATELIST'2
60.49% STATELIST'5
61.73% VARDECL_AUX1'1
62.96% FUNCCALL'1
64.20% RETURNSTAT'1
65.43% MULTIATRIBSTAT
66.67% RIGHTMULTIATRIBSTAT
67.90% PARAMLISTCALL
69.14% PRINTSTAT
70.37% READSTAT
71.60% RETURNSTAT
72.84% COMPARE
74.07% NUMEXPRESSION_AUX1'1
75.31% RIGHTMULTIATRIBSTAT'1
76.54% PARAMLISTCALL'1
77.78% NUMEXPRESSION'1
79.01% UNARYEXPR'1
80.25% RIGHTMULTIATRIBSTAT'2
81.48% STATEMENT
82.72% LVALUE_AUX1
83.95% FACTOR
85.19% TERM'1
86.42% TERM_AUX1
87.65% ATRIBSTAT
88.89% STATELIST'4
90.12% NUMEXPRESSION_AUX1
91.36% SIGNAL
92.59% RETURNLIST'1
93.83% ATRIBSTAT_AUX1'1
95.06% EXPRESSION
96.30% STATELIST
97.53% NUMEXPRESSION
98.77% STATELIST'1
-------------------
tk: def         prod: def ident ( A'2    s: [                                             A , $]
tk: def         top: def                 s: [                         def , ident , ( , A'2 , $]
tk: ident       top: ident               s: [                               ident , ( , A'2 , $]
tk: (           top: (                   s: [                                       ( , A'2 , $]
tk: string      prod: PARAMLIST ) STATEMENT A'4 s: [                                           A'2 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           top: )                   s: [                           ) , STATEMENT , A'4 , $]
tk: {           prod: { STATELIST }      s: [                               STATEMENT , A'4 , $]
tk: {           top: {                   s: [                       { , STATELIST , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                           STATELIST , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: /           prod: TERM_AUX1 PARAMLISTCALL'4 s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: /           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: /           prod: /                  s: [OPERATION , UNARYEXPR , TERM'1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: /           top: /                   s: [/ , UNARYEXPR , TERM'1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: float_constant  prod: float_constant     s: [UNARYEXPR , TERM'1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: float_constant  top: float_constant      s: [float_constant , TERM'1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'4 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [     { , STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [         STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <=          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <=          prod: <=                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <=          top: <=                  s: [<= , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant NUMEXPRESSION'1 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      prod: string ident STATELIST'4 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      top: string              s: [string , ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: VARDECL_AUX1 ; STATELIST'1 s: [STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ VARDECL_AUX2 ] VARDECL_AUX1'1 s: [VARDECL_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , VARDECL_AUX2 , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident              s: [VARDECL_AUX2 , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [VARDECL_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , FUNCCALL'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [FUNCCALL'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           prod: , PARAMLISTCALL    s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           top: ,                   s: [, , PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           prod: , PARAMLISTCALL    s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           top: ,                   s: [, , PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 PARAMLISTCALL'3 s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , FUNCCALL'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [FUNCCALL'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           prod: , PARAMLISTCALL    s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           top: ,                   s: [, , PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           prod: , PARAMLISTCALL    s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ,           top: ,                   s: [, , PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [PARAMLISTCALL , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 PARAMLISTCALL'3 s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'3 , ) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: else        prod: ELSESTAT STATELIST'1 s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: else        prod: else { STATELIST } s: [ELSESTAT , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: else        top: else                s: [else , { , STATELIST , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [       STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                     } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [                         STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                                       } , A'4 , $]
tk: def         prod: def ident ( A'2    s: [                                           A'4 , $]
tk: def         top: def                 s: [                         def , ident , ( , A'2 , $]
tk: ident       top: ident               s: [                               ident , ( , A'2 , $]
tk: (           top: (                   s: [                                       ( , A'2 , $]
tk: string      prod: PARAMLIST ) STATEMENT A'4 s: [                                           A'2 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: int                s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: int         top: int                 s: [int , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: int                s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: int         top: int                 s: [int , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           top: )                   s: [                           ) , STATEMENT , A'4 , $]
tk: {           prod: { STATELIST }      s: [                               STATEMENT , A'4 , $]
tk: {           top: {                   s: [                       { , STATELIST , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                           STATELIST , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: string      prod: string ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: string      top: string              s: [        string , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: [           prod: VARDECL_AUX1 ; STATELIST'1 s: [                         STATELIST'4 , } , A'4 , $]
tk: [           prod: [ VARDECL_AUX2 ] VARDECL_AUX1'1 s: [      VARDECL_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , VARDECL_AUX2 , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident              s: [VARDECL_AUX2 , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , VARDECL_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [    VARDECL_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL FACTOR ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , FACTOR , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , FACTOR , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant       s: [FACTOR , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'2 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [     { , STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [         STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [       STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [   ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [       STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [       STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [   ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [       STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                     } , STATELIST'1 , } , A'4 , $]
tk: return      prod: RETURNSTAT ; STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: return      prod: return RETURNSTAT'1 s: [        RETURNSTAT , ; , STATELIST'1 , } , A'4 , $]
tk: return      top: return              s: [return , RETURNSTAT'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident RETURNLIST'2 s: [      RETURNSTAT'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , RETURNLIST'2 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [      RETURNLIST'2 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [                         STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                                       } , A'4 , $]
tk: def         prod: def ident ( A'2    s: [                                           A'4 , $]
tk: def         top: def                 s: [                         def , ident , ( , A'2 , $]
tk: ident       top: ident               s: [                               ident , ( , A'2 , $]
tk: (           top: (                   s: [                                       ( , A'2 , $]
tk: string      prod: PARAMLIST ) STATEMENT A'4 s: [                                           A'2 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: int                s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: int         top: int                 s: [int , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           top: )                   s: [                           ) , STATEMENT , A'4 , $]
tk: {           prod: { STATELIST }      s: [                               STATEMENT , A'4 , $]
tk: {           top: {                   s: [                       { , STATELIST , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                           STATELIST , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [     { , STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [         STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: >=          prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: >=          prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: >=          prod: COMPARE NUMEXPRESSION s: [ATRIBSTAT_AUX1'3 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: >=          prod: >=                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: >=          top: >=                  s: [>= , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 ATRIBSTAT_AUX1'1 s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: &                  s: [UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 NUMEXPRESSION'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant NUMEXPRESSION'1 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , NUMEXPRESSION'1 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'1 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [int , ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [STATELIST , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 ATRIBSTAT_AUX1'1 s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: &                  s: [UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: COMPARE NUMEXPRESSION s: [ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: !=                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          top: !=                  s: [!= , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 NUMEXPRESSION'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      prod: string ident STATELIST'4 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      top: string              s: [string , ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [STATELIST'4 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string_constant  prod: string_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string_constant  top: string_constant     s: [string_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       prod: PRINTSTAT ; STATELIST'1 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       prod: print EXPRESSION   s: [PRINTSTAT , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       top: print               s: [print , EXPRESSION , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [EXPRESSION , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: !=                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          top: !=                  s: [!= , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant NUMEXPRESSION'1 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                     } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [                         STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                                       } , A'4 , $]
tk: def         prod: def ident ( A'2    s: [                                           A'4 , $]
tk: def         top: def                 s: [                         def , ident , ( , A'2 , $]
tk: ident       top: ident               s: [                               ident , ( , A'2 , $]
tk: (           top: (                   s: [                                       ( , A'2 , $]
tk: string      prod: PARAMLIST ) STATEMENT A'4 s: [                                           A'2 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: string      prod: string             s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: string      top: string              s: [string , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           prod: , PARAMLIST        s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ,           top: ,                   s: [           , , PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: TYPE LVALUE PARAMLIST'1 s: [               PARAMLIST , ) , STATEMENT , A'4 , $]
tk: int         prod: int                s: [TYPE , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: int         top: int                 s: [int , LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [    LVALUE , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           prod: &                  s: [             PARAMLIST'1 , ) , STATEMENT , A'4 , $]
tk: )           top: )                   s: [                           ) , STATEMENT , A'4 , $]
tk: {           prod: { STATELIST }      s: [                               STATEMENT , A'4 , $]
tk: {           top: {                   s: [                       { , STATELIST , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                           STATELIST , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: int         prod: int ident STATELIST'4 s: [                         STATELIST'1 , } , A'4 , $]
tk: int         top: int                 s: [           int , ident , STATELIST'4 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'4 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [                         STATELIST'4 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( FUNCCALL'1       s: [  ATRIBSTAT_AUX1'2 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [    ( , FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: PARAMLISTCALL )    s: [        FUNCCALL'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident PARAMLISTCALL'2 s: [ PARAMLISTCALL , ) , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [PARAMLISTCALL'2 , ) , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [                 ) , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [                         STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [                 ident , STATELIST'5 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [                         STATELIST'5 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident A'5          s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [           ident , A'5 , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; s: [                   A'5 , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [    ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: *           prod: TERM_AUX1 NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: *           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: *           prod: *                  s: [OPERATION , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: *           top: *                   s: [* , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: %           prod: TERM_AUX1 ATRIBSTAT_AUX1'4 s: [  ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , A'4 , $]
tk: %           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: %           prod: %                  s: [OPERATION , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: %           top: %                   s: [% , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [  ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [                     ; , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [     { , STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [         STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [       STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: TERM_AUX1 NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: *                  s: [OPERATION , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           top: *                   s: [* , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 TERM'1 s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: TERM_AUX1 ATRIBSTAT_AUX1'4 s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: %                  s: [OPERATION , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           top: %                   s: [% , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [   ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [       STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [       STATELIST'5 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: TERM_AUX1 NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: *                  s: [OPERATION , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: *           top: *                   s: [* , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 TERM'1 s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: TERM_AUX1 ATRIBSTAT_AUX1'4 s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: %                  s: [OPERATION , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: %           top: %                   s: [% , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [   ; , STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [       STATELIST'1 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                     } , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [                         STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <=          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <=          prod: <=                 s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: <=          top: <=                  s: [<= , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [         ) , STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [             STATEMENT , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [     { , STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [         STATELIST , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: for         prod: for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST'1 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: for         top: for                 s: [for , ( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION'2 , ; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: LVALUE = ATRIBSTAT_AUX1 s: [ATRIBSTAT , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [LVALUE , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident ATRIBSTAT_AUX1'2 s: [ATRIBSTAT_AUX1 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'2 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant TERM'1 s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [ATRIBSTAT_AUX1'3 , ) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           prod: { STATELIST }      s: [STATEMENT , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [STATELIST , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 ATRIBSTAT_AUX1'1 s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: &                  s: [UNARYEXPR'1 , ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: COMPARE NUMEXPRESSION s: [ATRIBSTAT_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          prod: !=                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: !=          top: !=                  s: [!= , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 NUMEXPRESSION'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       prod: break ; STATELIST'1 s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: break       top: break               s: [break , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'2 , } , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          prod: ==                 s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ==          top: ==                  s: [== , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      prod: string ident STATELIST'4 s: [STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string      top: string              s: [string , ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'4 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: ; STATELIST'1      s: [STATELIST'4 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string_constant  prod: string_constant ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: string_constant  top: string_constant     s: [string_constant , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: NUMEXPRESSION_AUX1 ATRIBSTAT_AUX1'3 s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'3 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       prod: PRINTSTAT ; STATELIST'1 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       prod: print EXPRESSION   s: [PRINTSTAT , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: print       top: print               s: [print , EXPRESSION , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [EXPRESSION , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: TERM_AUX1 NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: *                  s: [OPERATION , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           top: *                   s: [* , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION )  s: [UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           prod: -                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: -           top: -                   s: [- , TERM , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 TERM'1 s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: OPERATION UNARYEXPR TERM'1 s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           prod: *                  s: [OPERATION , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: *           top: *                   s: [* , UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: LVALUE_AUX1 TERM'1 s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           prod: [ LVALUE_AUX1'1    s: [LVALUE_AUX1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: [           top: [                   s: [[ , LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: NUMEXPRESSION ] UNARYEXPR'1 s: [LVALUE_AUX1'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ]           top: ]                   s: [] , UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [UNARYEXPR'1 , TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'1 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: TERM_AUX1 ATRIBSTAT_AUX1'4 s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: OPERATION UNARYEXPR TERM'1 s: [TERM_AUX1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: %           prod: %                  s: [OPERATION , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: %           top: %                   s: [% , UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident UNARYEXPR'1  s: [UNARYEXPR , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [UNARYEXPR'1 , TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [TERM'1 , ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'4 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          prod: if ( EXPRESSION ) { STATELIST } STATELIST'2 s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: if          top: if                  s: [if , ( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident EXPRESSION'1 s: [EXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: COMPARE NUMEXPRESSION s: [EXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           prod: <                  s: [COMPARE , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: <           top: <                   s: [< , NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  prod: int_constant NUMEXPRESSION'1 s: [NUMEXPRESSION , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: int_constant  top: int_constant        s: [int_constant , NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION'1 , ) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , { , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: {           top: {                   s: [{ , STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident STATELIST'5  s: [STATELIST , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , STATELIST'5 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: UNARYEXPR'1 = ATRIBSTAT_AUX1 ; STATELIST'1 s: [STATELIST'5 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           prod: &                  s: [UNARYEXPR'1 , = , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: =           top: =                   s: [= , ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           prod: ( NUMEXPRESSION ) ATRIBSTAT_AUX1'1 s: [ATRIBSTAT_AUX1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: (           top: (                   s: [( , NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident NUMEXPRESSION'2 s: [NUMEXPRESSION , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: SIGNAL TERM NUMEXPRESSION_AUX1'1 s: [NUMEXPRESSION'2 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           prod: +                  s: [SIGNAL , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: +           top: +                   s: [+ , TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       prod: ident TERM'2       s: [TERM , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ident       top: ident               s: [ident , TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [TERM'2 , NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           prod: &                  s: [NUMEXPRESSION_AUX1'1 , ) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: )           top: )                   s: [) , ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           prod: &                  s: [ATRIBSTAT_AUX1'1 , ; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: ;           top: ;                   s: [; , STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'1 , } , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [} , STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [STATELIST'2 , } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [   } , STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [       STATELIST'2 , } , STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                     } , STATELIST'1 , } , A'4 , $]
tk: }           prod: &                  s: [                         STATELIST'1 , } , A'4 , $]
tk: }           top: }                   s: [                                       } , A'4 , $]
tk: $           prod: &                  s: [                                           A'4 , $]

Sintaxe e léxico correto do arquivo program
def ::= def
ident ::= mainPatternSearching
( ::= (
string ::= string
ident ::= sequence
) ::= )
{ ::= {
int ::= int
ident ::= seq_length
; ::= ;
ident ::= seq_length
= ::= =
ident ::= strlen
( ::= (
ident ::= sequence
) ::= )
; ::= ;
int ::= int
ident ::= pattern_length
; ::= ;
ident ::= pattern_length
= ::= =
ident ::= floor
( ::= (
ident ::= seq_length
/ ::= /
float_constant ::= 2.0
) ::= )
; ::= ;
int ::= int
ident ::= i_min
; ::= ;
ident ::= i_min
= ::= =
int_constant ::= 0
; ::= ;
int ::= int
ident ::= i_max
; ::= ;
ident ::= i_max
= ::= =
ident ::= pattern_length
- ::= -
int_constant ::= 1
; ::= ;
int ::= int
ident ::= i
; ::= ;
for ::= for
( ::= (
ident ::= i
= ::= =
int_constant ::= 0
; ::= ;
ident ::= i
== ::= ==
ident ::= i
; ::= ;
ident ::= i
= ::= =
ident ::= i
) ::= )
{ ::= {
if ::= if
( ::= (
ident ::= pattern_length
<= ::= <=
int_constant ::= 1
) ::= )
{ ::= {
break ::= break
; ::= ;
} ::= }
if ::= if
( ::= (
ident ::= i_max
+ ::= +
int_constant ::= 1
+ ::= +
ident ::= pattern_length
< ::= <
ident ::= seq_length
- ::= -
int_constant ::= 1
) ::= )
{ ::= {
string ::= string
ident ::= pattern
[ ::= [
ident ::= pattern_length
] ::= ]
; ::= ;
ident ::= pattern
= ::= =
ident ::= slice
( ::= (
ident ::= sequence
, ::= ,
ident ::= i_min
, ::= ,
ident ::= i_max
+ ::= +
int_constant ::= 1
) ::= )
; ::= ;
ident ::= naivePatternSearching
( ::= (
ident ::= sequence
, ::= ,
ident ::= pattern
, ::= ,
ident ::= i_max
+ ::= +
int_constant ::= 1
) ::= )
; ::= ;
ident ::= i_min
= ::= =
ident ::= i_min
+ ::= +
int_constant ::= 1
; ::= ;
ident ::= i_max
= ::= =
ident ::= i_max
+ ::= +
int_constant ::= 1
; ::= ;
} ::= }
else ::= else
{ ::= {
ident ::= pattern_length
= ::= =
ident ::= pattern_length
- ::= -
int_constant ::= 1
; ::= ;
ident ::= i_min
= ::= =
int_constant ::= 0
; ::= ;
ident ::= i_max
= ::= =
ident ::= pattern_length
- ::= -
int_constant ::= 1
; ::= ;
} ::= }
} ::= }
} ::= }
def ::= def
ident ::= slice
( ::= (
string ::= string
ident ::= word
, ::= ,
int ::= int
ident ::= i_min
, ::= ,
int ::= int
ident ::= i_max
) ::= )
{ ::= {
int ::= int
ident ::= slice_length
; ::= ;
ident ::= slice_length
= ::= =
ident ::= i_max
- ::= -
ident ::= i_min
; ::= ;
string ::= string
ident ::= portion
[ ::= [
ident ::= slice_length
] ::= ]
; ::= ;
int ::= int
ident ::= i
; ::= ;
int ::= int
ident ::= i_portion
; ::= ;
ident ::= i_portion
= ::= =
- ::= -
int_constant ::= 1
; ::= ;
for ::= for
( ::= (
ident ::= i
= ::= =
ident ::= i_min
; ::= ;
ident ::= i
< ::= <
ident ::= i_max
; ::= ;
ident ::= i
= ::= =
ident ::= i
+ ::= +
int_constant ::= 1
) ::= )
{ ::= {
ident ::= i_portion
= ::= =
ident ::= i_portion
+ ::= +
int_constant ::= 1
; ::= ;
ident ::= portion
[ ::= [
ident ::= i_portion
] ::= ]
= ::= =
ident ::= word
[ ::= [
ident ::= i
] ::= ]
; ::= ;
} ::= }
return ::= return
ident ::= portion
; ::= ;
} ::= }
def ::= def
ident ::= naivePatternSearching
( ::= (
string ::= string
ident ::= sequence
, ::= ,
string ::= string
ident ::= pattern
, ::= ,
int ::= int
ident ::= i_start
) ::= )
{ ::= {
int ::= int
ident ::= seq_length
; ::= ;
ident ::= seq_length
= ::= =
ident ::= strlen
( ::= (
ident ::= sequence
) ::= )
; ::= ;
int ::= int
ident ::= pattern_length
; ::= ;
ident ::= pattern_length
= ::= =
ident ::= strlen
( ::= (
ident ::= pattern
) ::= )
; ::= ;
int ::= int
ident ::= i_min
; ::= ;
ident ::= i_min
= ::= =
ident ::= i_start
; ::= ;
int ::= int
ident ::= found
; ::= ;
ident ::= found
= ::= =
int_constant ::= 0
; ::= ;
int ::= int
ident ::= i
; ::= ;
for ::= for
( ::= (
ident ::= i
= ::= =
int_constant ::= 0
; ::= ;
ident ::= i
== ::= ==
ident ::= i
; ::= ;
ident ::= i
= ::= =
ident ::= i
) ::= )
{ ::= {
if ::= if
( ::= (
ident ::= i_min
+ ::= +
int_constant ::= 1
+ ::= +
ident ::= pattern_length
>= ::= >=
ident ::= seq_length
) ::= )
{ ::= {
break ::= break
; ::= ;
} ::= }
if ::= if
( ::= (
ident ::= sequence
[ ::= [
ident ::= i_min
] ::= ]
== ::= ==
ident ::= pattern
[ ::= [
int_constant ::= 0
] ::= ]
) ::= )
{ ::= {
int ::= int
ident ::= j
; ::= ;
for ::= for
( ::= (
ident ::= j
= ::= =
int_constant ::= 1
; ::= ;
ident ::= j
< ::= <
ident ::= pattern_length
; ::= ;
ident ::= i
= ::= =
ident ::= i
+ ::= +
int_constant ::= 1
) ::= )
{ ::= {
if ::= if
( ::= (
ident ::= sequence
[ ::= [
ident ::= i_min
+ ::= +
ident ::= j
] ::= ]
!= ::= !=
ident ::= pattern
[ ::= [
ident ::= j
] ::= ]
) ::= )
{ ::= {
ident ::= i_min
= ::= =
ident ::= i_min
+ ::= +
int_constant ::= 1
; ::= ;
break ::= break
; ::= ;
} ::= }
if ::= if
( ::= (
ident ::= j
== ::= ==
ident ::= pattern_length
- ::= -
int_constant ::= 1
) ::= )
{ ::= {
string ::= string
ident ::= out
; ::= ;
ident ::= out
= ::= =
string_constant ::=
