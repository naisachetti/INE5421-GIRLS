{,{
int,int
ident,a
;,;
ident,a
=,=
int_constant,1
*,*
int_constant,2
+,+
int_constant,3
*,*
int_constant,4
*,*
-,-
int_constant,10
/,/
(,(
+,+
int_constant,6
+,+
int_constant,4
*,*
int_constant,2
),)
;,;
},}
return,return
ident,heap
;,;
},}
comment,~Chamado de main na implementação original.~
def,def
ident,heapSort
(,(
int,int
ident,array
[,[
],]
",",","
int,int
ident,array_size
),)
{,{
int,int
ident,sorted_array
[,[
ident,array_size
],]
;,;
ident,sorted_array
=,=
ident,sort
(,(
ident,array
",",","
ident,array_size
),)
;,;
return,return
ident,sorted_array
;,;
},}
comment,~Inexistente na implementação original.~
def,def
ident,swap
(,(
int,int
ident,array
[,[
],]
",",","
int,int
ident,i
",",","
int,int
ident,largest
),)
{,{
int,int
ident,aux
;,;
ident,aux
=,=
ident,array
[,[
ident,i
],]
;,;
ident,array
[,[
ident,i
],]
=,=
ident,array
[,[
ident,largest
],]
;,;
ident,array
[,[
ident,largest
],]
=,=
ident,aux
;,;
return,return
ident,array
;,;
},}
comment,~Inexistente na implementação original.~
def,def
ident,reverse
(,(
int,int
ident,array
[,[
],]
",",","
int,int
ident,array_size
),)
{,{
int,int
ident,new_array
[,[
ident,array_size
],]
;,;
int,int
ident,i
;,;
for,for
(,(
ident,i
=,=
int_constant,0
;,;
ident,i
<,<
ident,array_size
;,;
ident,i
=,=
ident,i
+,+
int_constant,1
),)
{,{
ident,new_array
[,[
ident,i
],]
=,=
ident,array
[,[
ident,array_size
-,-
ident,i
-,-
int_constant,1
],]
;,;
},}
return,return
ident,new_array
;,;
},}
$,$
